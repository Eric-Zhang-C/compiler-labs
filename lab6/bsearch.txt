doProc for function tigermain:
 SEQ(
  SEQ(
   SEQ(
    SEQ(
     SEQ(
      SEQ(
       MOVE(
        TEMP t146,
        TEMP t116),
       MOVE(
        TEMP t147,
        TEMP t115)),
      MOVE(
       TEMP t148,
       TEMP t114)),
     MOVE(
      TEMP t149,
      TEMP t113)),
    MOVE(
     TEMP t150,
     TEMP t112)),
   MOVE(
    TEMP t151,
    TEMP t111)),
  SEQ(
   EXP(
    CONST 0),
   SEQ(
    MOVE(
     TEMP t110,
     ESEQ(
      SEQ(
       MOVE(
        MEM(
         BINOP(PLUS,
          TEMP t106,
          CONST -8)),
        CONST 16),
       SEQ(
        EXP(
         CONST 0),
        SEQ(
         MOVE(
          MEM(
           BINOP(PLUS,
            TEMP t106,
            CONST -16)),
          CALL(
           NAME initArray,
            CONST 0,
            MEM(
             BINOP(PLUS,
              TEMP t106,
              CONST -8)),
            CONST 0)),
         EXP(
          CONST 0)))),
      CALL(
       NAME try,
        TEMP t106))),
    SEQ(
     SEQ(
      SEQ(
       SEQ(
        SEQ(
         MOVE(
          TEMP t116,
          TEMP t146),
         MOVE(
          TEMP t115,
          TEMP t147)),
        MOVE(
         TEMP t114,
         TEMP t148)),
       MOVE(
        TEMP t113,
        TEMP t149)),
      MOVE(
       TEMP t112,
       TEMP t150)),
     MOVE(
      TEMP t111,
      TEMP t151)))))
-------====IR tree=====-----
 MOVE(
  TEMP t146,
  TEMP t116)
 MOVE(
  TEMP t147,
  TEMP t115)
 MOVE(
  TEMP t148,
  TEMP t114)
 MOVE(
  TEMP t149,
  TEMP t113)
 MOVE(
  TEMP t150,
  TEMP t112)
 MOVE(
  TEMP t151,
  TEMP t111)
 MOVE(
  MEM(
   BINOP(PLUS,
    TEMP t106,
    CONST -8)),
  CONST 16)
 MOVE(
  TEMP t155,
  BINOP(PLUS,
   TEMP t106,
   CONST -16))
 MOVE(
  TEMP t154,
  CALL(
   NAME initArray,
    CONST 0,
    MEM(
     BINOP(PLUS,
      TEMP t106,
      CONST -8)),
    CONST 0))
 MOVE(
  MEM(
   TEMP t155),
  TEMP t154)
 MOVE(
  TEMP t110,
  CALL(
   NAME try,
    TEMP t106))
 MOVE(
  TEMP t116,
  TEMP t146)
 MOVE(
  TEMP t115,
  TEMP t147)
 MOVE(
  TEMP t114,
  TEMP t148)
 MOVE(
  TEMP t113,
  TEMP t149)
 MOVE(
  TEMP t112,
  TEMP t150)
 MOVE(
  TEMP t111,
  TEMP t151)
-------====Linearlized=====-----
 LABEL L12
 MOVE(
  TEMP t146,
  TEMP t116)
 MOVE(
  TEMP t147,
  TEMP t115)
 MOVE(
  TEMP t148,
  TEMP t114)
 MOVE(
  TEMP t149,
  TEMP t113)
 MOVE(
  TEMP t150,
  TEMP t112)
 MOVE(
  TEMP t151,
  TEMP t111)
 MOVE(
  MEM(
   BINOP(PLUS,
    TEMP t106,
    CONST -8)),
  CONST 16)
 MOVE(
  TEMP t155,
  BINOP(PLUS,
   TEMP t106,
   CONST -16))
 MOVE(
  TEMP t154,
  CALL(
   NAME initArray,
    CONST 0,
    MEM(
     BINOP(PLUS,
      TEMP t106,
      CONST -8)),
    CONST 0))
 MOVE(
  MEM(
   TEMP t155),
  TEMP t154)
 MOVE(
  TEMP t110,
  CALL(
   NAME try,
    TEMP t106))
 MOVE(
  TEMP t116,
  TEMP t146)
 MOVE(
  TEMP t115,
  TEMP t147)
 MOVE(
  TEMP t114,
  TEMP t148)
 MOVE(
  TEMP t113,
  TEMP t149)
 MOVE(
  TEMP t112,
  TEMP t150)
 MOVE(
  TEMP t111,
  TEMP t151)
 JUMP(
  NAME L11)
 LABEL L11
-------====trace=====-----
----======before RA=======-----
Finish flowgraph!!
begin to initial all maps!
begin to build livemap!
begin to build confict graph!
begin to build spill priority graph!
Finish liveness analysis!!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
no color left!
Finish flowgraph!!
begin to initial all maps!
begin to build livemap!
begin to build confict graph!
begin to build spill priority graph!
Finish liveness analysis!!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
----======after RA=======-----
a format: assem= subq $32, %rsp, dst=0x5640f5b831c0, src=0x5640f5b831a0
a format: assem=L12, dst=(nil), src=(nil)
a format: assem= movq $16, `d0, dst=0x5640f5b83750, src=(nil)
a format: assem= movq `s1, 24(`s0), dst=(nil), src=0x5640f5b83800
a format: assem= leaq 32(`s0), `d0, dst=0x5640f5b83920, src=0x5640f5b83900
a format: assem= addq $-16, `d0, dst=0x5640f5b839d0, src=0x5640f5b839b0
a format: assem= movq `s1, 8(`s0), dst=(nil), src=0x5640f5bd02c0
a format: assem= movq $0, `d0, dst=0x5640f5b83c10, src=(nil)
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f5b83ca0
a format: assem= movq 24(`s0), `d0, dst=0x5640f5b83dc0, src=0x5640f5b83da0
a format: assem= movq $0, `d0, dst=0x5640f5b83f70, src=(nil)
a format: assem= callq initArray, dst=0x5640f5b84190, src=0x5640f5b840d0
a format: assem= movq 8(`s0), `d0, dst=0x5640f5bd0740, src=0x5640f5bd0720
a format: assem= movq `s1, (`s0), dst=(nil), src=0x5640f5b842f0
a format: assem= leaq 32(%rsp), `d0, dst=0x5640f5b84410, src=0x5640f5b843f0
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f5b844c0
a format: assem= callq try, dst=0x5640f5b845b0, src=(nil)
a format: assem=L11, dst=(nil), src=(nil)
a format: assem= addq $32, %rsp, dst=0x5640f5b84c30, src=0x5640f5b84c10
doProc for function try:
 SEQ(
  SEQ(
   SEQ(
    SEQ(
     SEQ(
      SEQ(
       MOVE(
        TEMP t140,
        TEMP t116),
       MOVE(
        TEMP t141,
        TEMP t115)),
      MOVE(
       TEMP t142,
       TEMP t114)),
     MOVE(
      TEMP t143,
      TEMP t113)),
    MOVE(
     TEMP t144,
     TEMP t112)),
   MOVE(
    TEMP t145,
    TEMP t111)),
  SEQ(
   EXP(
    CONST 0),
   SEQ(
    MOVE(
     TEMP t110,
     ESEQ(
      SEQ(
       EXP(
        CALL(
         NAME init,
          MEM(
           BINOP(PLUS,
            CONST 8,
            TEMP t106)))),
       EXP(
        CALL(
         NAME printi,
          TEMP t106,
          CALL(
           NAME bsearch,
            MEM(
             BINOP(PLUS,
              CONST 8,
              TEMP t106)),
            CONST 0,
            BINOP(MINUS,
             MEM(
              BINOP(PLUS,
               MEM(
                BINOP(PLUS,
                 CONST 8,
                 TEMP t106)),
               CONST -8)),
             CONST 1),
            CONST 7)))),
      CALL(
       NAME print,
        TEMP t106,
        NAME L10))),
    SEQ(
     SEQ(
      SEQ(
       SEQ(
        SEQ(
         MOVE(
          TEMP t116,
          TEMP t140),
         MOVE(
          TEMP t115,
          TEMP t141)),
        MOVE(
         TEMP t114,
         TEMP t142)),
       MOVE(
        TEMP t113,
        TEMP t143)),
      MOVE(
       TEMP t112,
       TEMP t144)),
     MOVE(
      TEMP t111,
      TEMP t145)))))
-------====IR tree=====-----
 MOVE(
  TEMP t140,
  TEMP t116)
 MOVE(
  TEMP t141,
  TEMP t115)
 MOVE(
  TEMP t142,
  TEMP t114)
 MOVE(
  TEMP t143,
  TEMP t113)
 MOVE(
  TEMP t144,
  TEMP t112)
 MOVE(
  TEMP t145,
  TEMP t111)
 EXP(
  CALL(
   NAME init,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106))))
 MOVE(
  TEMP t197,
  TEMP t106)
 MOVE(
  TEMP t196,
  CALL(
   NAME bsearch,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106)),
    CONST 0,
    BINOP(MINUS,
     MEM(
      BINOP(PLUS,
       MEM(
        BINOP(PLUS,
         CONST 8,
         TEMP t106)),
       CONST -8)),
     CONST 1),
    CONST 7))
 EXP(
  CALL(
   NAME printi,
    TEMP t197,
    TEMP t196))
 MOVE(
  TEMP t110,
  CALL(
   NAME print,
    TEMP t106,
    NAME L10))
 MOVE(
  TEMP t116,
  TEMP t140)
 MOVE(
  TEMP t115,
  TEMP t141)
 MOVE(
  TEMP t114,
  TEMP t142)
 MOVE(
  TEMP t113,
  TEMP t143)
 MOVE(
  TEMP t112,
  TEMP t144)
 MOVE(
  TEMP t111,
  TEMP t145)
-------====Linearlized=====-----
 LABEL L14
 MOVE(
  TEMP t140,
  TEMP t116)
 MOVE(
  TEMP t141,
  TEMP t115)
 MOVE(
  TEMP t142,
  TEMP t114)
 MOVE(
  TEMP t143,
  TEMP t113)
 MOVE(
  TEMP t144,
  TEMP t112)
 MOVE(
  TEMP t145,
  TEMP t111)
 EXP(
  CALL(
   NAME init,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106))))
 MOVE(
  TEMP t197,
  TEMP t106)
 MOVE(
  TEMP t196,
  CALL(
   NAME bsearch,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106)),
    CONST 0,
    BINOP(MINUS,
     MEM(
      BINOP(PLUS,
       MEM(
        BINOP(PLUS,
         CONST 8,
         TEMP t106)),
       CONST -8)),
     CONST 1),
    CONST 7))
 EXP(
  CALL(
   NAME printi,
    TEMP t197,
    TEMP t196))
 MOVE(
  TEMP t110,
  CALL(
   NAME print,
    TEMP t106,
    NAME L10))
 MOVE(
  TEMP t116,
  TEMP t140)
 MOVE(
  TEMP t115,
  TEMP t141)
 MOVE(
  TEMP t114,
  TEMP t142)
 MOVE(
  TEMP t113,
  TEMP t143)
 MOVE(
  TEMP t112,
  TEMP t144)
 MOVE(
  TEMP t111,
  TEMP t145)
 JUMP(
  NAME L13)
 LABEL L13
-------====trace=====-----
----======before RA=======-----
Finish flowgraph!!
begin to initial all maps!
begin to build livemap!
begin to build confict graph!
begin to build spill priority graph!
Finish liveness analysis!!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
----======after RA=======-----
a format: assem= subq $8, %rsp, dst=0x5640f5c3ae90, src=0x5640f5c3ae70
a format: assem=L14, dst=(nil), src=(nil)
a format: assem= movq 16(`s0), `d0, dst=0x5640f5c3b4d0, src=0x5640f5c3b4b0
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f5c3b560
a format: assem= callq init, dst=0x5640f5c3b650, src=(nil)
a format: assem= movq 16(`s0), `d0, dst=0x5640f5c3b8b0, src=0x5640f5c3b890
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f5c3b940
a format: assem= movq $0, `d0, dst=0x5640f5c3ba40, src=(nil)
a format: assem= movq 16(`s0), `d0, dst=0x5640f5c3bcf0, src=0x5640f5c3bcd0
a format: assem= movq -8(`s0), `d0, dst=0x5640f5c3bda0, src=0x5640f5c3bd80
a format: assem= subq $1, `d0, dst=0x5640f5c3bee0, src=(nil)
a format: assem= movq $7, `d0, dst=0x5640f5c3c090, src=(nil)
a format: assem= callq bsearch, dst=0x5640f5c3c290, src=0x5640f5c3c210
a format: assem= movq `s0, `d0, dst=0x5640f5c3c340, src=0x5640f5c3c320
a format: assem= leaq 8(%rsp), `d0, dst=0x5640f5c3c460, src=0x5640f5c3c440
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f5c3c510
a format: assem= callq printi, dst=0x5640f5c3c6d0, src=0x5640f5c3c650
a format: assem= leaq 8(%rsp), `d0, dst=0x5640f5c3c7f0, src=0x5640f5c3c7d0
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f5c3c8a0
a format: assem= leaq L10(%rip), `d0, dst=0x5640f5c3c9a0, src=(nil)
a format: assem= callq print, dst=0x5640f5c3cb60, src=0x5640f5c3cae0
a format: assem=L13, dst=(nil), src=(nil)
a format: assem= addq $8, %rsp, dst=0x5640f5c3d1e0, src=0x5640f5c3d1c0
doProc for function bsearch:
 SEQ(
  SEQ(
   SEQ(
    SEQ(
     SEQ(
      SEQ(
       MOVE(
        TEMP t134,
        TEMP t116),
       MOVE(
        TEMP t135,
        TEMP t115)),
      MOVE(
       TEMP t136,
       TEMP t114)),
     MOVE(
      TEMP t137,
      TEMP t113)),
    MOVE(
     TEMP t138,
     TEMP t112)),
   MOVE(
    TEMP t139,
    TEMP t111)),
  SEQ(
   SEQ(
    SEQ(
     SEQ(
      EXP(
       CONST 0),
      MOVE(
       TEMP t107,
       TEMP t105)),
     MOVE(
      TEMP t108,
      TEMP t104)),
    MOVE(
     TEMP t109,
     TEMP t103)),
   SEQ(
    MOVE(
     TEMP t110,
     ESEQ(
      SEQ(
       CJUMP(EQ,
        TEMP t107,
        TEMP t108,
        L7,L8),
       SEQ(
        LABEL L7,
        SEQ(
         MOVE(
          TEMP t133,
          TEMP t107),
         SEQ(
          JUMP(
           NAME L9),
          SEQ(
           LABEL L8,
           SEQ(
            MOVE(
             TEMP t133,
             ESEQ(
              MOVE(
               MEM(
                BINOP(PLUS,
                 TEMP t106,
                 CONST -8)),
               BINOP(DIVIDE,
                BINOP(PLUS,
                 TEMP t107,
                 TEMP t108),
                CONST 2)),
              ESEQ(
               SEQ(
                CJUMP(LT,
                 MEM(
                  BINOP(PLUS,
                   MEM(
                    BINOP(PLUS,
                     MEM(
                      BINOP(PLUS,
                       CONST 8,
                       TEMP t106)),
                     CONST -16)),
                   BINOP(TIMES,
                    MEM(
                     BINOP(PLUS,
                      TEMP t106,
                      CONST -8)),
                    CONST 8))),
                 TEMP t109,
                 L4,L5),
                SEQ(
                 LABEL L4,
                 SEQ(
                  MOVE(
                   TEMP t132,
                   CALL(
                    NAME bsearch,
                     MEM(
                      BINOP(PLUS,
                       CONST 8,
                       TEMP t106)),
                     BINOP(PLUS,
                      MEM(
                       BINOP(PLUS,
                        TEMP t106,
                        CONST -8)),
                      CONST 1),
                     TEMP t108,
                     TEMP t109)),
                  SEQ(
                   JUMP(
                    NAME L6),
                   SEQ(
                    LABEL L5,
                    SEQ(
                     MOVE(
                      TEMP t132,
                      CALL(
                       NAME bsearch,
                        MEM(
                         BINOP(PLUS,
                          CONST 8,
                          TEMP t106)),
                        TEMP t107,
                        MEM(
                         BINOP(PLUS,
                          TEMP t106,
                          CONST -8)),
                        TEMP t109)),
                     LABEL L6)))))),
               TEMP t132))),
            LABEL L9)))))),
      TEMP t133)),
    SEQ(
     SEQ(
      SEQ(
       SEQ(
        SEQ(
         MOVE(
          TEMP t116,
          TEMP t134),
         MOVE(
          TEMP t115,
          TEMP t135)),
        MOVE(
         TEMP t114,
         TEMP t136)),
       MOVE(
        TEMP t113,
        TEMP t137)),
      MOVE(
       TEMP t112,
       TEMP t138)),
     MOVE(
      TEMP t111,
      TEMP t139)))))
-------====IR tree=====-----
 MOVE(
  TEMP t134,
  TEMP t116)
 MOVE(
  TEMP t135,
  TEMP t115)
 MOVE(
  TEMP t136,
  TEMP t114)
 MOVE(
  TEMP t137,
  TEMP t113)
 MOVE(
  TEMP t138,
  TEMP t112)
 MOVE(
  TEMP t139,
  TEMP t111)
 MOVE(
  TEMP t107,
  TEMP t105)
 MOVE(
  TEMP t108,
  TEMP t104)
 MOVE(
  TEMP t109,
  TEMP t103)
 CJUMP(EQ,
  TEMP t107,
  TEMP t108,
  L7,L8)
 LABEL L7
 MOVE(
  TEMP t133,
  TEMP t107)
 JUMP(
  NAME L9)
 LABEL L8
 MOVE(
  MEM(
   BINOP(PLUS,
    TEMP t106,
    CONST -8)),
  BINOP(DIVIDE,
   BINOP(PLUS,
    TEMP t107,
    TEMP t108),
   CONST 2))
 CJUMP(LT,
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(PLUS,
      MEM(
       BINOP(PLUS,
        CONST 8,
        TEMP t106)),
      CONST -16)),
    BINOP(TIMES,
     MEM(
      BINOP(PLUS,
       TEMP t106,
       CONST -8)),
     CONST 8))),
  TEMP t109,
  L4,L5)
 LABEL L4
 MOVE(
  TEMP t132,
  CALL(
   NAME bsearch,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106)),
    BINOP(PLUS,
     MEM(
      BINOP(PLUS,
       TEMP t106,
       CONST -8)),
     CONST 1),
    TEMP t108,
    TEMP t109))
 JUMP(
  NAME L6)
 LABEL L5
 MOVE(
  TEMP t132,
  CALL(
   NAME bsearch,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106)),
    TEMP t107,
    MEM(
     BINOP(PLUS,
      TEMP t106,
      CONST -8)),
    TEMP t109))
 LABEL L6
 MOVE(
  TEMP t133,
  TEMP t132)
 LABEL L9
 MOVE(
  TEMP t110,
  TEMP t133)
 MOVE(
  TEMP t116,
  TEMP t134)
 MOVE(
  TEMP t115,
  TEMP t135)
 MOVE(
  TEMP t114,
  TEMP t136)
 MOVE(
  TEMP t113,
  TEMP t137)
 MOVE(
  TEMP t112,
  TEMP t138)
 MOVE(
  TEMP t111,
  TEMP t139)
-------====Linearlized=====-----
 LABEL L16
 MOVE(
  TEMP t134,
  TEMP t116)
 MOVE(
  TEMP t135,
  TEMP t115)
 MOVE(
  TEMP t136,
  TEMP t114)
 MOVE(
  TEMP t137,
  TEMP t113)
 MOVE(
  TEMP t138,
  TEMP t112)
 MOVE(
  TEMP t139,
  TEMP t111)
 MOVE(
  TEMP t107,
  TEMP t105)
 MOVE(
  TEMP t108,
  TEMP t104)
 MOVE(
  TEMP t109,
  TEMP t103)
 CJUMP(EQ,
  TEMP t107,
  TEMP t108,
  L7,L8)
 LABEL L8
 MOVE(
  MEM(
   BINOP(PLUS,
    TEMP t106,
    CONST -8)),
  BINOP(DIVIDE,
   BINOP(PLUS,
    TEMP t107,
    TEMP t108),
   CONST 2))
 CJUMP(LT,
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(PLUS,
      MEM(
       BINOP(PLUS,
        CONST 8,
        TEMP t106)),
      CONST -16)),
    BINOP(TIMES,
     MEM(
      BINOP(PLUS,
       TEMP t106,
       CONST -8)),
     CONST 8))),
  TEMP t109,
  L4,L5)
 LABEL L5
 MOVE(
  TEMP t132,
  CALL(
   NAME bsearch,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106)),
    TEMP t107,
    MEM(
     BINOP(PLUS,
      TEMP t106,
      CONST -8)),
    TEMP t109))
 LABEL L6
 MOVE(
  TEMP t133,
  TEMP t132)
 LABEL L9
 MOVE(
  TEMP t110,
  TEMP t133)
 MOVE(
  TEMP t116,
  TEMP t134)
 MOVE(
  TEMP t115,
  TEMP t135)
 MOVE(
  TEMP t114,
  TEMP t136)
 MOVE(
  TEMP t113,
  TEMP t137)
 MOVE(
  TEMP t112,
  TEMP t138)
 MOVE(
  TEMP t111,
  TEMP t139)
 JUMP(
  NAME L15)
 LABEL L7
 MOVE(
  TEMP t133,
  TEMP t107)
 JUMP(
  NAME L9)
 LABEL L4
 MOVE(
  TEMP t132,
  CALL(
   NAME bsearch,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106)),
    BINOP(PLUS,
     MEM(
      BINOP(PLUS,
       TEMP t106,
       CONST -8)),
     CONST 1),
    TEMP t108,
    TEMP t109))
 JUMP(
  NAME L6)
 LABEL L15
-------====trace=====-----
----======before RA=======-----
Finish flowgraph!!
begin to initial all maps!
begin to build livemap!
begin to build confict graph!
begin to build spill priority graph!
Finish liveness analysis!!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
no color left!
no color left!
no color left!
Finish flowgraph!!
begin to initial all maps!
begin to build livemap!
begin to build confict graph!
begin to build spill priority graph!
Finish liveness analysis!!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
----======after RA=======-----
a format: assem= subq $40, %rsp, dst=0x5640f5cd5840, src=0x5640f5cd5820
a format: assem=L16, dst=(nil), src=(nil)
a format: assem= movq `s1, 24(`s0), dst=(nil), src=0x5640f5e600e0
a format: assem= movq `s1, 8(`s0), dst=(nil), src=0x5640f5e65420
a format: assem= movq `s1, 16(`s0), dst=(nil), src=0x5640f5e62a50
a format: assem= movq 24(`s0), `d0, dst=0x5640f5e602c0, src=0x5640f5e602a0
a format: assem= movq 8(`s0), `d0, dst=0x5640f5e65670, src=0x5640f5e65650
a format: assem= cmpq `s1, `s0, dst=(nil), src=0x5640f5cd5f90
a format: assem= je  `j0, dst=(nil), src=(nil)
a format: assem=L8, dst=(nil), src=(nil)
a format: assem= movq 24(`s0), `d0, dst=0x5640f5e60430, src=0x5640f5e60410
a format: assem= movq 8(`s0), `d0, dst=0x5640f5e658c0, src=0x5640f5e658a0
a format: assem= addq `s1, `d0, dst=0x5640f5cd6310, src=0x5640f5cd62f0
a format: assem= cqto, dst=0x5640f5cd6490, src=0x5640f5cd6450
a format: assem= movq $2, `d0, dst=0x5640f5cd65d0, src=(nil)
a format: assem= idivq `s0, dst=0x5640f5cd66a0, src=0x5640f5cd6660
a format: assem= movq `s1, 32(`s0), dst=(nil), src=0x5640f5cd6800
a format: assem= movq 48(`s0), `d0, dst=0x5640f5cd6a90, src=0x5640f5cd6a70
a format: assem= movq -16(`s0), `d0, dst=0x5640f5cd6b40, src=0x5640f5cd6b20
a format: assem= movq 32(`s0), `d0, dst=0x5640f5cd6d80, src=0x5640f5cd6d60
a format: assem= movq $8, `d0, dst=0x5640f5cd6f50, src=(nil)
a format: assem= imulq `s0, dst=0x5640f5cd7020, src=0x5640f5cd6fe0
a format: assem= addq `s1, `d0, dst=0x5640f5cd71a0, src=0x5640f5cd7180
a format: assem= movq (`s0), `d0, dst=0x5640f5cd7250, src=0x5640f5cd7230
a format: assem= movq 16(`s0), `d0, dst=0x5640f5e634f0, src=0x5640f5e634d0
a format: assem= cmpq `s1, `s0, dst=(nil), src=0x5640f5cd72e0
a format: assem= jl  `j0, dst=(nil), src=(nil)
a format: assem=L5, dst=(nil), src=(nil)
a format: assem= movq 48(`s0), `d0, dst=0x5640f5cd75b0, src=0x5640f5cd7590
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f5cd7640
a format: assem= movq 24(`s0), `d0, dst=0x5640f5e60e60, src=0x5640f5e60e40
a format: assem= movq 32(`s0), `d0, dst=0x5640f5cd7810, src=0x5640f5cd77f0
a format: assem= movq 16(`s0), `d0, dst=0x5640f5e63900, src=0x5640f5e638e0
a format: assem= callq bsearch, dst=0x5640f5cd7ac0, src=0x5640f5cd7a40
a format: assem=L6, dst=(nil), src=(nil)
a format: assem=L9, dst=(nil), src=(nil)
a format: assem= jmp  `j0, dst=(nil), src=(nil)
a format: assem=L7, dst=(nil), src=(nil)
a format: assem= movq 24(`s0), `d0, dst=0x5640f5e61580, src=0x5640f5e61560
a format: assem= jmp  `j0, dst=(nil), src=(nil)
a format: assem=L4, dst=(nil), src=(nil)
a format: assem= movq 48(`s0), `d0, dst=0x5640f5cd8630, src=0x5640f5cd8610
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f5cd86c0
a format: assem= movq 32(`s0), `d0, dst=0x5640f5cd8850, src=0x5640f5cd8830
a format: assem= addq $1, `d0, dst=0x5640f5cd89b0, src=0x5640f5cd8990
a format: assem= movq 8(`s0), `d0, dst=0x5640f5e66e50, src=0x5640f5e66e30
a format: assem= movq 16(`s0), `d0, dst=0x5640f5e64330, src=0x5640f5e64310
a format: assem= callq bsearch, dst=0x5640f5cd8d10, src=0x5640f5cd8c90
a format: assem= jmp  `j0, dst=(nil), src=(nil)
a format: assem=L15, dst=(nil), src=(nil)
a format: assem= addq $40, %rsp, dst=0x5640f5cd8f70, src=0x5640f5cd8f50
doProc for function init:
 SEQ(
  SEQ(
   SEQ(
    SEQ(
     SEQ(
      SEQ(
       MOVE(
        TEMP t126,
        TEMP t116),
       MOVE(
        TEMP t127,
        TEMP t115)),
      MOVE(
       TEMP t128,
       TEMP t114)),
     MOVE(
      TEMP t129,
      TEMP t113)),
    MOVE(
     TEMP t130,
     TEMP t112)),
   MOVE(
    TEMP t131,
    TEMP t111)),
  SEQ(
   EXP(
    CONST 0),
   SEQ(
    MOVE(
     TEMP t110,
     ESEQ(
      SEQ(
       MOVE(
        TEMP t123,
        CONST 0),
       SEQ(
        MOVE(
         TEMP t124,
         BINOP(MINUS,
          MEM(
           BINOP(PLUS,
            MEM(
             BINOP(PLUS,
              CONST 8,
              TEMP t106)),
            CONST -8)),
          CONST 1)),
        SEQ(
         CJUMP(LE,
          CONST 0,
          BINOP(MINUS,
           MEM(
            BINOP(PLUS,
             MEM(
              BINOP(PLUS,
               CONST 8,
               TEMP t106)),
             CONST -8)),
           CONST 1),
          L3,L1),
         SEQ(
          LABEL L3,
          SEQ(
           EXP(
            ESEQ(
             MOVE(
              MEM(
               BINOP(PLUS,
                MEM(
                 BINOP(PLUS,
                  MEM(
                   BINOP(PLUS,
                    CONST 8,
                    TEMP t106)),
                  CONST -16)),
                BINOP(TIMES,
                 TEMP t123,
                 CONST 8))),
              BINOP(PLUS,
               BINOP(TIMES,
                TEMP t123,
                CONST 2),
               CONST 1)),
             CALL(
              NAME nop,
               MEM(
                BINOP(PLUS,
                 CONST 8,
                 TEMP t106))))),
           SEQ(
            CJUMP(LT,
             TEMP t123,
             TEMP t124,
             L2,L1),
            SEQ(
             LABEL L2,
             SEQ(
              MOVE(
               TEMP t123,
               BINOP(PLUS,
                TEMP t123,
                CONST 1)),
              SEQ(
               JUMP(
                NAME L3),
               LABEL L1))))))))),
      CONST 0)),
    SEQ(
     SEQ(
      SEQ(
       SEQ(
        SEQ(
         MOVE(
          TEMP t116,
          TEMP t126),
         MOVE(
          TEMP t115,
          TEMP t127)),
        MOVE(
         TEMP t114,
         TEMP t128)),
       MOVE(
        TEMP t113,
        TEMP t129)),
      MOVE(
       TEMP t112,
       TEMP t130)),
     MOVE(
      TEMP t111,
      TEMP t131)))))
-------====IR tree=====-----
 MOVE(
  TEMP t126,
  TEMP t116)
 MOVE(
  TEMP t127,
  TEMP t115)
 MOVE(
  TEMP t128,
  TEMP t114)
 MOVE(
  TEMP t129,
  TEMP t113)
 MOVE(
  TEMP t130,
  TEMP t112)
 MOVE(
  TEMP t131,
  TEMP t111)
 MOVE(
  TEMP t123,
  CONST 0)
 MOVE(
  TEMP t124,
  BINOP(MINUS,
   MEM(
    BINOP(PLUS,
     MEM(
      BINOP(PLUS,
       CONST 8,
       TEMP t106)),
     CONST -8)),
   CONST 1))
 CJUMP(LE,
  CONST 0,
  BINOP(MINUS,
   MEM(
    BINOP(PLUS,
     MEM(
      BINOP(PLUS,
       CONST 8,
       TEMP t106)),
     CONST -8)),
   CONST 1),
  L3,L1)
 LABEL L3
 MOVE(
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(PLUS,
      MEM(
       BINOP(PLUS,
        CONST 8,
        TEMP t106)),
      CONST -16)),
    BINOP(TIMES,
     TEMP t123,
     CONST 8))),
  BINOP(PLUS,
   BINOP(TIMES,
    TEMP t123,
    CONST 2),
   CONST 1))
 EXP(
  CALL(
   NAME nop,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106))))
 CJUMP(LT,
  TEMP t123,
  TEMP t124,
  L2,L1)
 LABEL L2
 MOVE(
  TEMP t123,
  BINOP(PLUS,
   TEMP t123,
   CONST 1))
 JUMP(
  NAME L3)
 LABEL L1
 MOVE(
  TEMP t110,
  CONST 0)
 MOVE(
  TEMP t116,
  TEMP t126)
 MOVE(
  TEMP t115,
  TEMP t127)
 MOVE(
  TEMP t114,
  TEMP t128)
 MOVE(
  TEMP t113,
  TEMP t129)
 MOVE(
  TEMP t112,
  TEMP t130)
 MOVE(
  TEMP t111,
  TEMP t131)
-------====Linearlized=====-----
 LABEL L18
 MOVE(
  TEMP t126,
  TEMP t116)
 MOVE(
  TEMP t127,
  TEMP t115)
 MOVE(
  TEMP t128,
  TEMP t114)
 MOVE(
  TEMP t129,
  TEMP t113)
 MOVE(
  TEMP t130,
  TEMP t112)
 MOVE(
  TEMP t131,
  TEMP t111)
 MOVE(
  TEMP t123,
  CONST 0)
 MOVE(
  TEMP t124,
  BINOP(MINUS,
   MEM(
    BINOP(PLUS,
     MEM(
      BINOP(PLUS,
       CONST 8,
       TEMP t106)),
     CONST -8)),
   CONST 1))
 CJUMP(LE,
  CONST 0,
  BINOP(MINUS,
   MEM(
    BINOP(PLUS,
     MEM(
      BINOP(PLUS,
       CONST 8,
       TEMP t106)),
     CONST -8)),
   CONST 1),
  L3,L1)
 LABEL L1
 MOVE(
  TEMP t110,
  CONST 0)
 MOVE(
  TEMP t116,
  TEMP t126)
 MOVE(
  TEMP t115,
  TEMP t127)
 MOVE(
  TEMP t114,
  TEMP t128)
 MOVE(
  TEMP t113,
  TEMP t129)
 MOVE(
  TEMP t112,
  TEMP t130)
 MOVE(
  TEMP t111,
  TEMP t131)
 JUMP(
  NAME L17)
 LABEL L3
 MOVE(
  MEM(
   BINOP(PLUS,
    MEM(
     BINOP(PLUS,
      MEM(
       BINOP(PLUS,
        CONST 8,
        TEMP t106)),
      CONST -16)),
    BINOP(TIMES,
     TEMP t123,
     CONST 8))),
  BINOP(PLUS,
   BINOP(TIMES,
    TEMP t123,
    CONST 2),
   CONST 1))
 EXP(
  CALL(
   NAME nop,
    MEM(
     BINOP(PLUS,
      CONST 8,
      TEMP t106))))
 CJUMP(GE,
  TEMP t123,
  TEMP t124,
  L1,L2)
 LABEL L2
 MOVE(
  TEMP t123,
  BINOP(PLUS,
   TEMP t123,
   CONST 1))
 JUMP(
  NAME L3)
 LABEL L17
-------====trace=====-----
----======before RA=======-----
Finish flowgraph!!
begin to initial all maps!
begin to build livemap!
begin to build confict graph!
begin to build spill priority graph!
Finish liveness analysis!!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
no color left!
no color left!
Finish flowgraph!!
begin to initial all maps!
begin to build livemap!
begin to build confict graph!
begin to build spill priority graph!
Finish liveness analysis!!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
----======after RA=======-----
a format: assem= subq $24, %rsp, dst=0x5640f60061f0, src=0x5640f60061d0
a format: assem=L18, dst=(nil), src=(nil)
a format: assem= movq $0, `d0, dst=0x5640f6006780, src=(nil)
a format: assem= movq `s1, 16(`s0), dst=(nil), src=0x5640f61de5e0
a format: assem= movq 32(`s0), `d0, dst=0x5640f6006a30, src=0x5640f6006a10
a format: assem= movq -8(`s0), `d0, dst=0x5640f6006ae0, src=0x5640f6006ac0
a format: assem= subq $1, `d0, dst=0x5640f6006c20, src=(nil)
a format: assem= movq `s1, 8(`s0), dst=(nil), src=0x5640f61e0c70
a format: assem= movq 32(`s0), `d0, dst=0x5640f6006ed0, src=0x5640f6006eb0
a format: assem= movq -8(`s0), `d0, dst=0x5640f6006f80, src=0x5640f6006f60
a format: assem= subq $1, `d0, dst=0x5640f60070c0, src=(nil)
a format: assem= movq $0, `d0, dst=0x5640f60071e0, src=(nil)
a format: assem= cmpq `s1, `s0, dst=(nil), src=0x5640f6007270
a format: assem= jle  `j0, dst=(nil), src=(nil)
a format: assem=L1, dst=(nil), src=(nil)
a format: assem= movq $0, `d0, dst=0x5640f6007490, src=(nil)
a format: assem= jmp  `j0, dst=(nil), src=(nil)
a format: assem=L3, dst=(nil), src=(nil)
a format: assem= movq 32(`s0), `d0, dst=0x5640f6007c60, src=0x5640f6007c40
a format: assem= movq -16(`s0), `d0, dst=0x5640f6007d10, src=0x5640f6007cf0
a format: assem= movq 16(`s0), `d0, dst=0x5640f61df160, src=0x5640f61df140
a format: assem= movq $8, `d0, dst=0x5640f6008000, src=(nil)
a format: assem= imulq `s0, dst=0x5640f60080d0, src=0x5640f6008090
a format: assem= addq `s1, `d0, dst=0x5640f6008250, src=0x5640f6008230
a format: assem= movq 16(`s0), `d0, dst=0x5640f61df420, src=0x5640f61df400
a format: assem= movq $2, `d0, dst=0x5640f6008500, src=(nil)
a format: assem= imulq `s0, dst=0x5640f60085d0, src=0x5640f6008590
a format: assem= addq $1, `d0, dst=0x5640f60087e0, src=0x5640f60087c0
a format: assem= movq `s1, (`s0), dst=(nil), src=0x5640f6008890
a format: assem= movq 32(`s0), `d0, dst=0x5640f6008a40, src=0x5640f6008a20
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f6008ad0
a format: assem= callq nop, dst=0x5640f6008bc0, src=(nil)
a format: assem= movq 16(`s0), `d0, dst=0x5640f61df910, src=0x5640f61df8f0
a format: assem= movq 8(`s0), `d0, dst=0x5640f61e1da0, src=0x5640f61e1d80
a format: assem= cmpq `s1, `s0, dst=(nil), src=0x5640f6008c70
a format: assem= jge  `j0, dst=(nil), src=(nil)
a format: assem=L2, dst=(nil), src=(nil)
a format: assem= movq 16(`s0), `d0, dst=0x5640f61dfa80, src=0x5640f61dfa60
a format: assem= addq $1, `d0, dst=0x5640f6008f60, src=0x5640f6008f40
a format: assem= movq `s1, 16(`s0), dst=(nil), src=0x5640f61dfbf0
a format: assem= jmp  `j0, dst=(nil), src=(nil)
a format: assem=L17, dst=(nil), src=(nil)
a format: assem= addq $24, %rsp, dst=0x5640f60091c0, src=0x5640f60091a0
doProc for function nop:
 SEQ(
  SEQ(
   SEQ(
    SEQ(
     SEQ(
      SEQ(
       MOVE(
        TEMP t117,
        TEMP t116),
       MOVE(
        TEMP t118,
        TEMP t115)),
      MOVE(
       TEMP t119,
       TEMP t114)),
     MOVE(
      TEMP t120,
      TEMP t113)),
    MOVE(
     TEMP t121,
     TEMP t112)),
   MOVE(
    TEMP t122,
    TEMP t111)),
  SEQ(
   EXP(
    CONST 0),
   SEQ(
    MOVE(
     TEMP t110,
     CALL(
      NAME print,
       TEMP t106,
       NAME L0)),
    SEQ(
     SEQ(
      SEQ(
       SEQ(
        SEQ(
         MOVE(
          TEMP t116,
          TEMP t117),
         MOVE(
          TEMP t115,
          TEMP t118)),
        MOVE(
         TEMP t114,
         TEMP t119)),
       MOVE(
        TEMP t113,
        TEMP t120)),
      MOVE(
       TEMP t112,
       TEMP t121)),
     MOVE(
      TEMP t111,
      TEMP t122)))))
-------====IR tree=====-----
 MOVE(
  TEMP t117,
  TEMP t116)
 MOVE(
  TEMP t118,
  TEMP t115)
 MOVE(
  TEMP t119,
  TEMP t114)
 MOVE(
  TEMP t120,
  TEMP t113)
 MOVE(
  TEMP t121,
  TEMP t112)
 MOVE(
  TEMP t122,
  TEMP t111)
 MOVE(
  TEMP t110,
  CALL(
   NAME print,
    TEMP t106,
    NAME L0))
 MOVE(
  TEMP t116,
  TEMP t117)
 MOVE(
  TEMP t115,
  TEMP t118)
 MOVE(
  TEMP t114,
  TEMP t119)
 MOVE(
  TEMP t113,
  TEMP t120)
 MOVE(
  TEMP t112,
  TEMP t121)
 MOVE(
  TEMP t111,
  TEMP t122)
-------====Linearlized=====-----
 LABEL L20
 MOVE(
  TEMP t117,
  TEMP t116)
 MOVE(
  TEMP t118,
  TEMP t115)
 MOVE(
  TEMP t119,
  TEMP t114)
 MOVE(
  TEMP t120,
  TEMP t113)
 MOVE(
  TEMP t121,
  TEMP t112)
 MOVE(
  TEMP t122,
  TEMP t111)
 MOVE(
  TEMP t110,
  CALL(
   NAME print,
    TEMP t106,
    NAME L0))
 MOVE(
  TEMP t116,
  TEMP t117)
 MOVE(
  TEMP t115,
  TEMP t118)
 MOVE(
  TEMP t114,
  TEMP t119)
 MOVE(
  TEMP t113,
  TEMP t120)
 MOVE(
  TEMP t112,
  TEMP t121)
 MOVE(
  TEMP t111,
  TEMP t122)
 JUMP(
  NAME L19)
 LABEL L19
-------====trace=====-----
----======before RA=======-----
Finish flowgraph!!
begin to initial all maps!
begin to build livemap!
begin to build confict graph!
begin to build spill priority graph!
Finish liveness analysis!!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
select a spill node!
----======after RA=======-----
a format: assem= subq $8, %rsp, dst=0x5640f63c4cf0, src=0x5640f63c4cd0
a format: assem=L20, dst=(nil), src=(nil)
a format: assem= leaq 8(%rsp), `d0, dst=0x5640f63c52a0, src=0x5640f63c5280
a format: assem= movq `s0, (%rsp), dst=(nil), src=0x5640f63c5350
a format: assem= leaq L0(%rip), `d0, dst=0x5640f63c5450, src=(nil)
a format: assem= callq print, dst=0x5640f63c5610, src=0x5640f63c5590
a format: assem=L19, dst=(nil), src=(nil)
a format: assem= addq $8, %rsp, dst=0x5640f63c5c90, src=0x5640f63c5c70
