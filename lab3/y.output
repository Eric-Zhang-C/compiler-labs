状态 33conflicts: 1 shift/reduce
状态 35conflicts: 1 shift/reduce
状态 103conflicts: 13 shift/reduce
状态 104conflicts: 12 shift/reduce
状态 132conflicts: 12 shift/reduce
状态 133conflicts: 12 shift/reduce
状态 154conflicts: 12 shift/reduce


语法

    0 $accept: program $end

    1 program: exp

    2 lvalue: ID
    3       | one
    4       | oneormore

    5 one: ID LBRACK exp RBRACK
    6    | ID DOT ID

    7 oneormore: one DOT ID
    8          | one LBRACK exp RBRACK

    9 rec_one: ID EQ exp

   10 rec: rec_nonempty
   11    | rec_one

   12 rec_nonempty: rec_one COMMA rec

   13 actuals: nonemptyactuals
   14        | exp

   15 nonemptyactuals: exp COMMA actuals

   16 sequencing_exps: exp SEMICOLON sequencing

   17 sequencing: sequencing_exps
   18           | exp

   19 exp: lvalue
   20    | NIL
   21    | INT
   22    | STRING
   23    | LPAREN exp RPAREN
   24    | LPAREN RPAREN
   25    | ID LPAREN actuals RPAREN
   26    | ID LPAREN RPAREN
   27    | exp PLUS exp
   28    | exp MINUS exp
   29    | exp TIMES exp
   30    | exp DIVIDE exp
   31    | MINUS exp
   32    | exp EQ exp
   33    | exp NEQ exp
   34    | exp LT exp
   35    | exp LE exp
   36    | exp GT exp
   37    | exp GE exp
   38    | exp AND exp
   39    | exp OR exp
   40    | ID LBRACE rec RBRACE
   41    | ID LBRACE RBRACE
   42    | LPAREN sequencing_exps RPAREN
   43    | lvalue ASSIGN exp
   44    | IF exp THEN exp ELSE exp
   45    | IF exp THEN exp
   46    | WHILE exp DO exp
   47    | FOR ID ASSIGN exp TO exp DO exp
   48    | BREAK
   49    | LET decs IN expseq END
   50    | LET decs IN END
   51    | ID LBRACK exp RBRACK OF exp

   52 expseq: sequencing

   53 vardec: VAR ID ASSIGN exp
   54       | VAR ID COLON ID ASSIGN exp

   55 tydec: tydec_one tydec
   56      | tydec_one

   57 tydec_one: TYPE ID EQ ty

   58 ty: ID
   59   | LBRACE tyfields RBRACE
   60   | LBRACE RBRACE
   61   | ARRAY OF ID

   62 tyfield: ID COLON ID

   63 tyfields: tyfields_nonemp
   64         | tyfield

   65 tyfields_nonemp: tyfield COMMA tyfields

   66 fundec: fundec_one fundec
   67       | fundec_one

   68 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   69           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp
   70           | FUNCTION ID LPAREN RPAREN EQ exp
   71           | FUNCTION ID LPAREN RPAREN COLON ID EQ exp

   72 decs_nonempty_s: tydec
   73                | fundec
   74                | vardec

   75 decs: decs_nonempty
   76     | decs_nonempty_s

   77 decs_nonempty: decs_nonempty_s decs


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 2 5 6 7 9 25 26 40 41 47 51 53 54 57 58 61 62 68 69 70 71
STRING (259) 22
INT (260) 21
COMMA (261) 12 15 65
COLON (262) 54 62 69 71
SEMICOLON (263) 16
LPAREN (264) 23 24 25 26 42 68 69 70 71
RPAREN (265) 23 24 25 26 42 68 69 70 71
LBRACK (266) 5 8 51
RBRACK (267) 5 8 51
LBRACE (268) 40 41 59 60
RBRACE (269) 40 41 59 60
DOT (270) 6 7
PLUS (271) 27
MINUS (272) 28 31
TIMES (273) 29
DIVIDE (274) 30
EQ (275) 9 32 57 68 69 70 71
NEQ (276) 33
LT (277) 34
LE (278) 35
GT (279) 36
GE (280) 37
AND (281) 38
OR (282) 39
ASSIGN (283) 43 47 53 54
ARRAY (284) 61
IF (285) 44 45
THEN (286) 44 45
ELSE (287) 44
WHILE (288) 46
FOR (289) 47
TO (290) 47
DO (291) 46 47
LET (292) 49 50
IN (293) 49 50
END (294) 49 50
OF (295) 51 61
BREAK (296) 48
NIL (297) 20
FUNCTION (298) 68 69 70 71
VAR (299) 53 54
TYPE (300) 57
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
lvalue (49)
    on left: 2 3 4, on right: 19 43
one (50)
    on left: 5 6, on right: 3 7 8
oneormore (51)
    on left: 7 8, on right: 4
rec_one (52)
    on left: 9, on right: 11 12
rec (53)
    on left: 10 11, on right: 12 40
rec_nonempty (54)
    on left: 12, on right: 10
actuals (55)
    on left: 13 14, on right: 15 25
nonemptyactuals (56)
    on left: 15, on right: 13
sequencing_exps (57)
    on left: 16, on right: 17 42
sequencing (58)
    on left: 17 18, on right: 16 52
exp (59)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    37 38 39 40 41 42 43 44 45 46 47 48 49 50 51, on right: 1 5 8 9
    14 15 16 18 23 27 28 29 30 31 32 33 34 35 36 37 38 39 43 44 45
    46 47 51 53 54 68 69 70 71
expseq (60)
    on left: 52, on right: 49
vardec (61)
    on left: 53 54, on right: 74
tydec (62)
    on left: 55 56, on right: 55 72
tydec_one (63)
    on left: 57, on right: 55 56
ty (64)
    on left: 58 59 60 61, on right: 57
tyfield (65)
    on left: 62, on right: 64 65
tyfields (66)
    on left: 63 64, on right: 59 65 68 69
tyfields_nonemp (67)
    on left: 65, on right: 63
fundec (68)
    on left: 66 67, on right: 66 73
fundec_one (69)
    on left: 68 69 70 71, on right: 66 67
decs_nonempty_s (70)
    on left: 72 73 74, on right: 76 77
decs (71)
    on left: 75 76, on right: 49 50 77
decs_nonempty (72)
    on left: 77, on right: 75


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    转到状态 12
    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 16


State 1

    2 lvalue: ID .
    5 one: ID . LBRACK exp RBRACK
    6    | ID . DOT ID
   25 exp: ID . LPAREN actuals RPAREN
   26    | ID . LPAREN RPAREN
   40    | ID . LBRACE rec RBRACE
   41    | ID . LBRACE RBRACE
   51    | ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 17
    LBRACK  shift, and go to state 18
    LBRACE  shift, and go to state 19
    DOT     shift, and go to state 20

    $default  reduce using rule 2 (lvalue)


State 2

   22 exp: STRING .

    $default  reduce using rule 22 (exp)


State 3

   21 exp: INT .

    $default  reduce using rule 21 (exp)


State 4

   23 exp: LPAREN . exp RPAREN
   24    | LPAREN . RPAREN
   42    | LPAREN . sequencing_exps RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 21
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue           转到状态 13
    one              转到状态 14
    oneormore        转到状态 15
    sequencing_exps  转到状态 22
    exp              转到状态 23


State 5

   31 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 24


State 6

   44 exp: IF . exp THEN exp ELSE exp
   45    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 25


State 7

   46 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 26


State 8

   47 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 27


State 9

   49 exp: LET . decs IN expseq END
   50    | LET . decs IN END

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    vardec           转到状态 31
    tydec            转到状态 32
    tydec_one        转到状态 33
    fundec           转到状态 34
    fundec_one       转到状态 35
    decs_nonempty_s  转到状态 36
    decs             转到状态 37
    decs_nonempty    转到状态 38


State 10

   48 exp: BREAK .

    $default  reduce using rule 48 (exp)


State 11

   20 exp: NIL .

    $default  reduce using rule 20 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 39


State 13

   19 exp: lvalue .
   43    | lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 40

    $default  reduce using rule 19 (exp)


State 14

    3 lvalue: one .
    7 oneormore: one . DOT ID
    8          | one . LBRACK exp RBRACK

    LBRACK  shift, and go to state 41
    DOT     shift, and go to state 42

    $default  reduce using rule 3 (lvalue)


State 15

    4 lvalue: oneormore .

    $default  reduce using rule 4 (lvalue)


State 16

    1 program: exp .
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 1 (program)


State 17

   25 exp: ID LPAREN . actuals RPAREN
   26    | ID LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 55
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue           转到状态 13
    one              转到状态 14
    oneormore        转到状态 15
    actuals          转到状态 56
    nonemptyactuals  转到状态 57
    exp              转到状态 58


State 18

    5 one: ID LBRACK . exp RBRACK
   51 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 59


State 19

   40 exp: ID LBRACE . rec RBRACE
   41    | ID LBRACE . RBRACE

    ID      shift, and go to state 60
    RBRACE  shift, and go to state 61

    rec_one       转到状态 62
    rec           转到状态 63
    rec_nonempty  转到状态 64


State 20

    6 one: ID DOT . ID

    ID  shift, and go to state 65


State 21

   24 exp: LPAREN RPAREN .

    $default  reduce using rule 24 (exp)


State 22

   42 exp: LPAREN sequencing_exps . RPAREN

    RPAREN  shift, and go to state 66


State 23

   16 sequencing_exps: exp . SEMICOLON sequencing
   23 exp: LPAREN exp . RPAREN
   27    | exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    SEMICOLON  shift, and go to state 67
    RPAREN     shift, and go to state 68
    PLUS       shift, and go to state 43
    MINUS      shift, and go to state 44
    TIMES      shift, and go to state 45
    DIVIDE     shift, and go to state 46
    EQ         shift, and go to state 47
    NEQ        shift, and go to state 48
    LT         shift, and go to state 49
    LE         shift, and go to state 50
    GT         shift, and go to state 51
    GE         shift, and go to state 52
    AND        shift, and go to state 53
    OR         shift, and go to state 54


State 24

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   31    | MINUS exp .
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    $default  reduce using rule 31 (exp)


State 25

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   44    | IF exp . THEN exp ELSE exp
   45    | IF exp . THEN exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54
    THEN    shift, and go to state 69


State 26

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   46    | WHILE exp . DO exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54
    DO      shift, and go to state 70


State 27

   47 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 71


State 28

   68 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   69           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp
   70           | FUNCTION . ID LPAREN RPAREN EQ exp
   71           | FUNCTION . ID LPAREN RPAREN COLON ID EQ exp

    ID  shift, and go to state 72


State 29

   53 vardec: VAR . ID ASSIGN exp
   54       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 73


State 30

   57 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 74


State 31

   74 decs_nonempty_s: vardec .

    $default  reduce using rule 74 (decs_nonempty_s)


State 32

   72 decs_nonempty_s: tydec .

    $default  reduce using rule 72 (decs_nonempty_s)


State 33

   55 tydec: tydec_one . tydec
   56      | tydec_one .

    TYPE  shift, and go to state 30

    TYPE      [reduce using rule 56 (tydec)]
    $default  reduce using rule 56 (tydec)

    tydec      转到状态 75
    tydec_one  转到状态 33


State 34

   73 decs_nonempty_s: fundec .

    $default  reduce using rule 73 (decs_nonempty_s)


State 35

   66 fundec: fundec_one . fundec
   67       | fundec_one .

    FUNCTION  shift, and go to state 28

    FUNCTION  [reduce using rule 67 (fundec)]
    $default  reduce using rule 67 (fundec)

    fundec      转到状态 76
    fundec_one  转到状态 35


State 36

   76 decs: decs_nonempty_s .
   77 decs_nonempty: decs_nonempty_s . decs

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    $default  reduce using rule 76 (decs)

    vardec           转到状态 31
    tydec            转到状态 32
    tydec_one        转到状态 33
    fundec           转到状态 34
    fundec_one       转到状态 35
    decs_nonempty_s  转到状态 36
    decs             转到状态 77
    decs_nonempty    转到状态 38


State 37

   49 exp: LET decs . IN expseq END
   50    | LET decs . IN END

    IN  shift, and go to state 78


State 38

   75 decs: decs_nonempty .

    $default  reduce using rule 75 (decs)


State 39

    0 $accept: program $end .

    $default  接受


State 40

   43 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 79


State 41

    8 oneormore: one LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 80


State 42

    7 oneormore: one DOT . ID

    ID  shift, and go to state 81


State 43

   27 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 82


State 44

   28 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 83


State 45

   29 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 84


State 46

   30 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 85


State 47

   32 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 86


State 48

   33 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 87


State 49

   34 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 88


State 50

   35 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 89


State 51

   36 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 90


State 52

   37 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 91


State 53

   38 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 92


State 54

   39 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 93


State 55

   26 exp: ID LPAREN RPAREN .

    $default  reduce using rule 26 (exp)


State 56

   25 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 94


State 57

   13 actuals: nonemptyactuals .

    $default  reduce using rule 13 (actuals)


State 58

   14 actuals: exp .
   15 nonemptyactuals: exp . COMMA actuals
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    COMMA   shift, and go to state 95
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 14 (actuals)


State 59

    5 one: ID LBRACK exp . RBRACK
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   51    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 96
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54


State 60

    9 rec_one: ID . EQ exp

    EQ  shift, and go to state 97


State 61

   41 exp: ID LBRACE RBRACE .

    $default  reduce using rule 41 (exp)


State 62

   11 rec: rec_one .
   12 rec_nonempty: rec_one . COMMA rec

    COMMA  shift, and go to state 98

    $default  reduce using rule 11 (rec)


State 63

   40 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 99


State 64

   10 rec: rec_nonempty .

    $default  reduce using rule 10 (rec)


State 65

    6 one: ID DOT ID .

    $default  reduce using rule 6 (one)


State 66

   42 exp: LPAREN sequencing_exps RPAREN .

    $default  reduce using rule 42 (exp)


State 67

   16 sequencing_exps: exp SEMICOLON . sequencing

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue           转到状态 13
    one              转到状态 14
    oneormore        转到状态 15
    sequencing_exps  转到状态 100
    sequencing       转到状态 101
    exp              转到状态 102


State 68

   23 exp: LPAREN exp RPAREN .

    $default  reduce using rule 23 (exp)


State 69

   44 exp: IF exp THEN . exp ELSE exp
   45    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 103


State 70

   46 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 104


State 71

   47 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 105


State 72

   68 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   69           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp
   70           | FUNCTION ID . LPAREN RPAREN EQ exp
   71           | FUNCTION ID . LPAREN RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 106


State 73

   53 vardec: VAR ID . ASSIGN exp
   54       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 107
    ASSIGN  shift, and go to state 108


State 74

   57 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 109


State 75

   55 tydec: tydec_one tydec .

    $default  reduce using rule 55 (tydec)


State 76

   66 fundec: fundec_one fundec .

    $default  reduce using rule 66 (fundec)


State 77

   77 decs_nonempty: decs_nonempty_s decs .

    $default  reduce using rule 77 (decs_nonempty)


State 78

   49 exp: LET decs IN . expseq END
   50    | LET decs IN . END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    END     shift, and go to state 110
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue           转到状态 13
    one              转到状态 14
    oneormore        转到状态 15
    sequencing_exps  转到状态 100
    sequencing       转到状态 111
    exp              转到状态 102
    expseq           转到状态 112


State 79

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   43    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 43 (exp)


State 80

    8 oneormore: one LBRACK exp . RBRACK
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    RBRACK  shift, and go to state 113
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54


State 81

    7 oneormore: one DOT ID .

    $default  reduce using rule 7 (oneormore)


State 82

   27 exp: exp . PLUS exp
   27    | exp PLUS exp .
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 27 (exp)


State 83

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   28    | exp MINUS exp .
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 28 (exp)


State 84

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   29    | exp TIMES exp .
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    $default  reduce using rule 29 (exp)


State 85

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   30    | exp DIVIDE exp .
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    $default  reduce using rule 30 (exp)


State 86

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   32    | exp EQ exp .
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 32 (exp)


State 87

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   33    | exp NEQ exp .
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 33 (exp)


State 88

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   34    | exp LT exp .
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 34 (exp)


State 89

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   35    | exp LE exp .
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (exp)


State 90

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   36    | exp GT exp .
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 36 (exp)


State 91

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   37    | exp GE exp .
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 37 (exp)


State 92

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   38    | exp AND exp .
   39    | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52

    $default  reduce using rule 38 (exp)


State 93

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   39    | exp OR exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52

    $default  reduce using rule 39 (exp)


State 94

   25 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 25 (exp)


State 95

   15 nonemptyactuals: exp COMMA . actuals

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue           转到状态 13
    one              转到状态 14
    oneormore        转到状态 15
    actuals          转到状态 114
    nonemptyactuals  转到状态 57
    exp              转到状态 58


State 96

    5 one: ID LBRACK exp RBRACK .
   51 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 115

    $default  reduce using rule 5 (one)


State 97

    9 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 116


State 98

   12 rec_nonempty: rec_one COMMA . rec

    ID  shift, and go to state 60

    rec_one       转到状态 62
    rec           转到状态 117
    rec_nonempty  转到状态 64


State 99

   40 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 40 (exp)


State 100

   17 sequencing: sequencing_exps .

    $default  reduce using rule 17 (sequencing)


State 101

   16 sequencing_exps: exp SEMICOLON sequencing .

    $default  reduce using rule 16 (sequencing_exps)


State 102

   16 sequencing_exps: exp . SEMICOLON sequencing
   18 sequencing: exp .
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    SEMICOLON  shift, and go to state 67
    PLUS       shift, and go to state 43
    MINUS      shift, and go to state 44
    TIMES      shift, and go to state 45
    DIVIDE     shift, and go to state 46
    EQ         shift, and go to state 47
    NEQ        shift, and go to state 48
    LT         shift, and go to state 49
    LE         shift, and go to state 50
    GT         shift, and go to state 51
    GE         shift, and go to state 52
    AND        shift, and go to state 53
    OR         shift, and go to state 54

    $default  reduce using rule 18 (sequencing)


State 103

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   44    | IF exp THEN exp . ELSE exp
   45    | IF exp THEN exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54
    ELSE    shift, and go to state 118

    PLUS      [reduce using rule 45 (exp)]
    MINUS     [reduce using rule 45 (exp)]
    TIMES     [reduce using rule 45 (exp)]
    DIVIDE    [reduce using rule 45 (exp)]
    EQ        [reduce using rule 45 (exp)]
    NEQ       [reduce using rule 45 (exp)]
    LT        [reduce using rule 45 (exp)]
    LE        [reduce using rule 45 (exp)]
    GT        [reduce using rule 45 (exp)]
    GE        [reduce using rule 45 (exp)]
    AND       [reduce using rule 45 (exp)]
    OR        [reduce using rule 45 (exp)]
    ELSE      [reduce using rule 45 (exp)]
    $default  reduce using rule 45 (exp)


State 104

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   46    | WHILE exp DO exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    PLUS      [reduce using rule 46 (exp)]
    MINUS     [reduce using rule 46 (exp)]
    TIMES     [reduce using rule 46 (exp)]
    DIVIDE    [reduce using rule 46 (exp)]
    EQ        [reduce using rule 46 (exp)]
    NEQ       [reduce using rule 46 (exp)]
    LT        [reduce using rule 46 (exp)]
    LE        [reduce using rule 46 (exp)]
    GT        [reduce using rule 46 (exp)]
    GE        [reduce using rule 46 (exp)]
    AND       [reduce using rule 46 (exp)]
    OR        [reduce using rule 46 (exp)]
    $default  reduce using rule 46 (exp)


State 105

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   47    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54
    TO      shift, and go to state 119


State 106

   68 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   69           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp
   70           | FUNCTION ID LPAREN . RPAREN EQ exp
   71           | FUNCTION ID LPAREN . RPAREN COLON ID EQ exp

    ID      shift, and go to state 120
    RPAREN  shift, and go to state 121

    tyfield          转到状态 122
    tyfields         转到状态 123
    tyfields_nonemp  转到状态 124


State 107

   54 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 125


State 108

   53 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 126


State 109

   57 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 127
    LBRACE  shift, and go to state 128
    ARRAY   shift, and go to state 129

    ty  转到状态 130


State 110

   50 exp: LET decs IN END .

    $default  reduce using rule 50 (exp)


State 111

   52 expseq: sequencing .

    $default  reduce using rule 52 (expseq)


State 112

   49 exp: LET decs IN expseq . END

    END  shift, and go to state 131


State 113

    8 oneormore: one LBRACK exp RBRACK .

    $default  reduce using rule 8 (oneormore)


State 114

   15 nonemptyactuals: exp COMMA actuals .

    $default  reduce using rule 15 (nonemptyactuals)


State 115

   51 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 132


State 116

    9 rec_one: ID EQ exp .
   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 9 (rec_one)


State 117

   12 rec_nonempty: rec_one COMMA rec .

    $default  reduce using rule 12 (rec_nonempty)


State 118

   44 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 133


State 119

   47 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 134


State 120

   62 tyfield: ID . COLON ID

    COLON  shift, and go to state 135


State 121

   70 fundec_one: FUNCTION ID LPAREN RPAREN . EQ exp
   71           | FUNCTION ID LPAREN RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 136
    EQ     shift, and go to state 137


State 122

   64 tyfields: tyfield .
   65 tyfields_nonemp: tyfield . COMMA tyfields

    COMMA  shift, and go to state 138

    $default  reduce using rule 64 (tyfields)


State 123

   68 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   69           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 139


State 124

   63 tyfields: tyfields_nonemp .

    $default  reduce using rule 63 (tyfields)


State 125

   54 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 140


State 126

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   53 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 53 (vardec)


State 127

   58 ty: ID .

    $default  reduce using rule 58 (ty)


State 128

   59 ty: LBRACE . tyfields RBRACE
   60   | LBRACE . RBRACE

    ID      shift, and go to state 120
    RBRACE  shift, and go to state 141

    tyfield          转到状态 122
    tyfields         转到状态 142
    tyfields_nonemp  转到状态 124


State 129

   61 ty: ARRAY . OF ID

    OF  shift, and go to state 143


State 130

   57 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 57 (tydec_one)


State 131

   49 exp: LET decs IN expseq END .

    $default  reduce using rule 49 (exp)


State 132

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   51    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    PLUS      [reduce using rule 51 (exp)]
    MINUS     [reduce using rule 51 (exp)]
    TIMES     [reduce using rule 51 (exp)]
    DIVIDE    [reduce using rule 51 (exp)]
    EQ        [reduce using rule 51 (exp)]
    NEQ       [reduce using rule 51 (exp)]
    LT        [reduce using rule 51 (exp)]
    LE        [reduce using rule 51 (exp)]
    GT        [reduce using rule 51 (exp)]
    GE        [reduce using rule 51 (exp)]
    AND       [reduce using rule 51 (exp)]
    OR        [reduce using rule 51 (exp)]
    $default  reduce using rule 51 (exp)


State 133

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   44    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    PLUS      [reduce using rule 44 (exp)]
    MINUS     [reduce using rule 44 (exp)]
    TIMES     [reduce using rule 44 (exp)]
    DIVIDE    [reduce using rule 44 (exp)]
    EQ        [reduce using rule 44 (exp)]
    NEQ       [reduce using rule 44 (exp)]
    LT        [reduce using rule 44 (exp)]
    LE        [reduce using rule 44 (exp)]
    GT        [reduce using rule 44 (exp)]
    GE        [reduce using rule 44 (exp)]
    AND       [reduce using rule 44 (exp)]
    OR        [reduce using rule 44 (exp)]
    $default  reduce using rule 44 (exp)


State 134

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   47    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54
    DO      shift, and go to state 144


State 135

   62 tyfield: ID COLON . ID

    ID  shift, and go to state 145


State 136

   71 fundec_one: FUNCTION ID LPAREN RPAREN COLON . ID EQ exp

    ID  shift, and go to state 146


State 137

   70 fundec_one: FUNCTION ID LPAREN RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 147


State 138

   65 tyfields_nonemp: tyfield COMMA . tyfields

    ID  shift, and go to state 120

    tyfield          转到状态 122
    tyfields         转到状态 148
    tyfields_nonemp  转到状态 124


State 139

   68 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   69           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 149
    EQ     shift, and go to state 150


State 140

   54 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 151


State 141

   60 ty: LBRACE RBRACE .

    $default  reduce using rule 60 (ty)


State 142

   59 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 152


State 143

   61 ty: ARRAY OF . ID

    ID  shift, and go to state 153


State 144

   47 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 154


State 145

   62 tyfield: ID COLON ID .

    $default  reduce using rule 62 (tyfield)


State 146

   71 fundec_one: FUNCTION ID LPAREN RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 155


State 147

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   70 fundec_one: FUNCTION ID LPAREN RPAREN EQ exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 70 (fundec_one)


State 148

   65 tyfields_nonemp: tyfield COMMA tyfields .

    $default  reduce using rule 65 (tyfields_nonemp)


State 149

   69 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 156


State 150

   68 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 157


State 151

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   54 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 54 (vardec)


State 152

   59 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 59 (ty)


State 153

   61 ty: ARRAY OF ID .

    $default  reduce using rule 61 (ty)


State 154

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   47    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    PLUS      [reduce using rule 47 (exp)]
    MINUS     [reduce using rule 47 (exp)]
    TIMES     [reduce using rule 47 (exp)]
    DIVIDE    [reduce using rule 47 (exp)]
    EQ        [reduce using rule 47 (exp)]
    NEQ       [reduce using rule 47 (exp)]
    LT        [reduce using rule 47 (exp)]
    LE        [reduce using rule 47 (exp)]
    GT        [reduce using rule 47 (exp)]
    GE        [reduce using rule 47 (exp)]
    AND       [reduce using rule 47 (exp)]
    OR        [reduce using rule 47 (exp)]
    $default  reduce using rule 47 (exp)


State 155

   71 fundec_one: FUNCTION ID LPAREN RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 158


State 156

   69 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 159


State 157

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   68 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 68 (fundec_one)


State 158

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   71 fundec_one: FUNCTION ID LPAREN RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 71 (fundec_one)


State 159

   69 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    lvalue     转到状态 13
    one        转到状态 14
    oneormore  转到状态 15
    exp        转到状态 160


State 160

   27 exp: exp . PLUS exp
   28    | exp . MINUS exp
   29    | exp . TIMES exp
   30    | exp . DIVIDE exp
   32    | exp . EQ exp
   33    | exp . NEQ exp
   34    | exp . LT exp
   35    | exp . LE exp
   36    | exp . GT exp
   37    | exp . GE exp
   38    | exp . AND exp
   39    | exp . OR exp
   69 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    EQ      shift, and go to state 47
    NEQ     shift, and go to state 48
    LT      shift, and go to state 49
    LE      shift, and go to state 50
    GT      shift, and go to state 51
    GE      shift, and go to state 52
    AND     shift, and go to state 53
    OR      shift, and go to state 54

    $default  reduce using rule 69 (fundec_one)
